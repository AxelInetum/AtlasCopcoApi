[{"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\index.js":"1","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\NavBar\\NavBars.js":"2","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\menu\\MenuInicial.js":"3","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\ListTrucks.js":"4","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\App.js":"5","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\store.js":"6","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Services\\TruckService.js":"7","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\actions\\TruckActions.js":"8","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\auth\\NuevaCuentaUsuario.js":"9","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\TrucksReducer.js":"10","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\EditTruck.js":"11","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\CreateTrucks.js":"12","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\UsersReducer.js":"13","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\DeleteTruck.js":"14","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\actions\\UsersActions.js":"15","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Global.js":"16","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\index.js":"17","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\auth\\Login.js":"18","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Services\\UserService.js":"19","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\i18n.js":"20","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\TrucksPage.js":"21","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Types\\index.js":"22","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\FiltersTruck.js":"23","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reportWebVitals.js":"24","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Calendar\\Calendar.jsx":"25","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Calendar\\CalendarPage.js":"26","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\history\\history.js":"27","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Cars\\Cars.js":"28","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Alert\\Alert.js":"29","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\Pagination\\index.js":"30","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\DataTable.js":"31","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\Header\\index.js":"32"},{"size":535,"mtime":1660853133805,"results":"33","hashOfConfig":"34"},{"size":872,"mtime":1660974645777,"results":"35","hashOfConfig":"34"},{"size":810,"mtime":1660904088411,"results":"36","hashOfConfig":"34"},{"size":873,"mtime":1661516563524,"results":"37","hashOfConfig":"34"},{"size":1852,"mtime":1661251426503,"results":"38","hashOfConfig":"34"},{"size":418,"mtime":1660050527526,"results":"39","hashOfConfig":"34"},{"size":1538,"mtime":1660134174286,"results":"40","hashOfConfig":"34"},{"size":4687,"mtime":1661499957815,"results":"41","hashOfConfig":"34"},{"size":5832,"mtime":1660161756454,"results":"42","hashOfConfig":"34"},{"size":2723,"mtime":1660979494818,"results":"43","hashOfConfig":"34"},{"size":5049,"mtime":1660973341510,"results":"44","hashOfConfig":"34"},{"size":3907,"mtime":1660978276101,"results":"45","hashOfConfig":"34"},{"size":437,"mtime":1660903328187,"results":"46","hashOfConfig":"34"},{"size":1572,"mtime":1661505051802,"results":"47","hashOfConfig":"34"},{"size":1093,"mtime":1660950026730,"results":"48","hashOfConfig":"34"},{"size":168,"mtime":1660134149089,"results":"49","hashOfConfig":"34"},{"size":244,"mtime":1661516532238,"results":"50","hashOfConfig":"34"},{"size":3893,"mtime":1660949594729,"results":"51","hashOfConfig":"34"},{"size":541,"mtime":1660135473240,"results":"52","hashOfConfig":"34"},{"size":652,"mtime":1660908491705,"results":"53","hashOfConfig":"34"},{"size":403,"mtime":1661516541094,"results":"54","hashOfConfig":"34"},{"size":647,"mtime":1661516525533,"results":"55","hashOfConfig":"34"},{"size":2897,"mtime":1660979972467,"results":"56","hashOfConfig":"34"},{"size":375,"mtime":1659620630072,"results":"57","hashOfConfig":"34"},{"size":1246,"mtime":1661853431491,"results":"58","hashOfConfig":"34"},{"size":1577,"mtime":1661494201901,"results":"59","hashOfConfig":"34"},{"size":89,"mtime":1659620630058,"results":"60","hashOfConfig":"34"},{"size":1670,"mtime":1660646188214,"results":"61","hashOfConfig":"34"},{"size":188,"mtime":1660199609766,"results":"62","hashOfConfig":"34"},{"size":1439,"mtime":1661522899938,"results":"63","hashOfConfig":"34"},{"size":5505,"mtime":1661522899922,"results":"64","hashOfConfig":"34"},{"size":1498,"mtime":1661521077983,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1i3fkeq",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\index.js",[],["147","148"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\NavBar\\NavBars.js",["149","150"],"import React,{Fragment,useEffect,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nconst Navbars = () => {\r\n  const { t} = useTranslation();\r\n  return (\r\n    <Fragment>\r\n      <div class=\"container margin2\">\r\n       \t<div class=\"col-12 mt-4 bg-dark mb-3 rounded\">\r\n            <ul class=\"fm-nav nav bg-dark text-white justify-content-center\">           \r\n              <li class=\"nav-item\">\r\n                 <Link to={'/TrucksPage'} className=\"nav-link active\">{t('Camiones')}</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                 <Link to={'/Cars'} className=\"nav-link active\">{t('Coches')}</Link>\r\n              </li>\r\n            </ul>\r\n         </div>\r\n         <h1 class=\"tituloedit\">{t('Camiones')}</h1>  \r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Navbars;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\menu\\MenuInicial.js",["151"],"import React, { Fragment } from 'react';\r\nimport NavBars from '../NavBar/NavBars';\r\nimport {useSelector} from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst MenuInicial = () => {\r\n    const { t} = useTranslation();\r\n    const datauserloginLdpa = useSelector(state => state.UsersReducer.dataUserLoginldpa);\r\n    document.body.className = \"ImageBackgroundspages\";\r\n    debugger;\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n             <NavBars></NavBars>\r\n    \r\n                {datauserloginLdpa.permisions.indexOf(\"Admin\") > -1 ? (<h1 class=\"centertext entertextsize\">Test Inetum eres administrador</h1>) : (<h1 class=\"centertext entertextsize\">Test Inetum no eres administrador</h1>)}\r\n             </div>ng\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default MenuInicial;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\ListTrucks.js",["152","153","154","155"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\App.js",[],["156","157"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\store.js",[],["158","159"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Services\\TruckService.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\actions\\TruckActions.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\auth\\NuevaCuentaUsuario.js",["160","161","162","163","164","165","166"],"import react,  { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport sha256 from 'crypto-js/sha256'\r\nconst NuevaCuentaUsuario = () => {\r\n\r\n    //state Iniciar Sesión\r\n    const [NuevaCuentaUsuarios,CrearCuentaUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password: '',\r\n        confirmarpassword: ''\r\n    });\r\n    \r\n    //extraemos los valores de los inputs \r\n    const {nombre,email,password,confirmarpassword} = NuevaCuentaUsuarios;\r\n    //si mostramos alerta o no \r\n    const [ShowAlert,SetShowAlert] = useState(false);\r\n    //mesnaje alert\r\n    const [MensajeAlert,SetMensajeAlert] = useState(\"\");\r\n\r\n    //inclusion de js par encriptar Contraseña\r\n    var CryptoJS = require(\"crypto-js\");\r\n    //inicialización variable contraseña encriptada en Sha256\r\n    var  Contraseñasha256Hash = \"\";\r\n\r\n    //cada cambio seteamos el objeto usuario \r\n    const OnChange = e => \r\n    {\r\n        CrearCuentaUsuario({\r\n            ...NuevaCuentaUsuarios,\r\n            [e.target.name] : e.target.value\r\n        })\r\n        SetShowAlert(false);\r\n        SetMensajeAlert(\"\");\r\n    }\r\n\r\n    async function CrearCuentaUsuarios()\r\n    {\r\n        debugger;\r\n       await Axios.post(`http://localhost:7071/api/validateUserLdap`, {\r\n            nombre: NuevaCuentaUsuarios.nombre,\r\n            email: NuevaCuentaUsuarios.email,\r\n            password: CryptoJS.SHA256(NuevaCuentaUsuarios.password).toString(),     \r\n             }\r\n            ).then(res => \r\n            {           \r\n                debugger          \r\n                if (res.data !=\"\" && res.data !=\"existe\")\r\n                {\r\n                    SetShowAlert(true);\r\n                    SetMensajeAlert(\"Usuario Creado correctamente\");\r\n                }\r\n                else\r\n                {\r\n                     if (res.data ==\"existe\")\r\n                     {\r\n                        SetShowAlert(true);\r\n                        SetMensajeAlert(\"El email ya existe\");\r\n                     }\r\n                     else\r\n                     {\r\n                        SetShowAlert(true);\r\n                        SetMensajeAlert(\"Error Creación Usuario\");\r\n                     }\r\n                }\r\n        })\r\n    }\r\n   \r\n    const onSubmit = e =>\r\n    {\r\n        e.preventDefault();\r\n        if(nombre.trim() === '' ||email.trim() ===  '' || \r\n        password.trim() === '' || confirmarpassword.trim() === '' )\r\n        {\r\n            SetShowAlert(true);\r\n            SetMensajeAlert(\"Los campos són obligatorios\");\r\n        }\r\n        else\r\n        {\r\n        \r\n            if (password.trim() != confirmarpassword.trim()) \r\n            {\r\n                SetShowAlert(true);\r\n                SetMensajeAlert(\"Contraseñas diferentes\");\r\n            }\r\n            else\r\n            {\r\n                SetShowAlert(false);\r\n                SetMensajeAlert(\"\");  \r\n                CrearCuentaUsuarios();                              \r\n         \r\n            }           \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className =\"form-usuario ImageBackgroundLogin\">\r\n            \r\n            <div className=\"contenedor-form sombra-dark\">\r\n            <br></br>\r\n            {ShowAlert ? (<div className=\"alerta alerta-error\">{MensajeAlert}</div>) : null}\r\n                   \r\n                    <h1>Crear Cuenta Usuario</h1>\r\n                    <form\r\n                      onSubmit={onSubmit}\r\n                    >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={nombre}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu password\"\r\n                            value={password}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmarpassword\">Confirmar Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmarpassword\"\r\n                            name=\"confirmarpassword\"\r\n                            placeholder=\"Confirmar password\"\r\n                            value={confirmarpassword}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-success btn-block btn-lg\" value=\"Crear cuenta\"/>\r\n                    </div>\r\n                    </form>\r\n                    <Link to={'/'} className=\"enlace-cuenta\">Volver a login </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NuevaCuentaUsuario;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\TrucksReducer.js",["167","168"],"import {\r\n    SHOW_EDIT_POPUP_TRUCK,\r\n    HIDDEN_EDIT_POPUP_TRUCK,\r\n    GET_LIST_TRUCKS,\r\n    EDIT_TRUCK,\r\n    ERROR_EDIT_TRUCK,\r\n    DELETE_TRUCK,\r\n    HIDDEN_DELETE_POPUP_TRUCK,\r\n    SHOW_DELETE_POPUP_TRUCK,\r\n    CREATE_TRUCK,\r\n    SET_ID_SELECTED_TRUCK,\r\n    UPDATE_LIST_TRUCKS_FILTER\r\n} from '../Types';\r\n\r\n//cada reducer tiene su state \r\nconst initialState = {\r\n     EditTruckpopup:false,\r\n     DeleteTruckpopup:false,\r\n     ListTrucks:[],\r\n     ListTrucks2:[],\r\n     idTruckSelected:0\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    debugger;\r\n    switch(action.type)\r\n    {\r\n         case SHOW_EDIT_POPUP_TRUCK:\r\n            return {\r\n                ...state,\r\n                EditTruckpopup:true \r\n            }\r\n         case HIDDEN_EDIT_POPUP_TRUCK:\r\n            return {\r\n                ...state,\r\n                EditTruckpopup:false\r\n            }\r\n        case GET_LIST_TRUCKS:\r\n            return {\r\n                ...state,\r\n                ListTrucks:action.payload,\r\n                ListTrucks2:action.payload\r\n            }\r\n        case EDIT_TRUCK:\r\n            return {\r\n                ...state,\r\n                ListTrucks: state.ListTrucks.map(truck => \r\n                    truck.id === action.payload.id ? truck = action.payload : truck\r\n                ),\r\n                ListTrucks2: state.ListTrucks2.map(truck => \r\n                    truck.id === action.payload.id ? truck = action.payload : truck\r\n                ),\r\n                EditTruckpopup:false\r\n            }\r\n        case DELETE_TRUCK:\r\n            return {\r\n                ...state,\r\n                ListTrucks:state.ListTrucks.filter(truck => truck.id !==action.payload),\r\n                ListTrucks2:state.ListTrucks2.filter(truck => truck.id !==action.payload),\r\n                DeleteTruckpopup:false\r\n            }\r\n        case HIDDEN_DELETE_POPUP_TRUCK:\r\n            return {\r\n                ...state,\r\n                DeleteTruckpopup:false\r\n            }\r\n        case SHOW_DELETE_POPUP_TRUCK:\r\n            return {\r\n                ...state,\r\n                DeleteTruckpopup:true\r\n            }\r\n        case CREATE_TRUCK:\r\n            return {\r\n                ...state,\r\n                ListTrucks: [...state.ListTrucks,action.payload],\r\n                ListTrucks2: [...state.ListTrucks2,action.payload]\r\n            }\r\n        case SET_ID_SELECTED_TRUCK:\r\n                return {\r\n                    ...state,\r\n                    idTruckSelected: action.payload\r\n                }\r\n        case UPDATE_LIST_TRUCKS_FILTER:\r\n            return {\r\n                ...state,\r\n                ListTrucks:action.payload\r\n            }\r\n         default:\r\n             return state;\r\n    }\r\n}",["169","170"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\EditTruck.js",["171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React,{useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {HiddenEditPopupTruck,EditTrucks} from '../../actions/TruckActions';\r\nimport {Button,ModalHeader,Modal,ModalBody,ModalFooter,FormGroup,Input,Label} from 'reactstrap';\r\nimport Alert from '../Alert/Alert';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst EditTruck = ({listTrucks }) => {\r\n    const { t} = useTranslation();\r\n    const showEditTruckpopup = useSelector(state => state.TrucksReducers.EditTruckpopup);\r\n    const dispatch = useDispatch();\r\n    const idTrucksselected = useSelector(state => state.TrucksReducers.idTruckSelected);\r\n   \r\n    //state Iniciar Sesión\r\n    const [EditarCamion,SetEditarCamion] = useState({\r\n        id: 0,\r\n        nombre:'',\r\n        marca:'',\r\n        modelo: '',\r\n        matricula: '',\r\n    });\r\n\r\n    const modalStyle=\r\n   {\r\n        position:\"absolute\",\r\n        top: '10%',\r\n        left: '30%'       \r\n   }\r\n    const ClosePopup=() => \r\n    {\r\n        dispatch(HiddenEditPopupTruck(false));  \r\n    }\r\n\r\n    useEffect(() => \r\n    {    \r\n        debugger;\r\n        if(idTrucksselected!=0)\r\n        {\r\n            SetEditarCamion(listTrucks.filter(truck => truck.id == idTrucksselected)[0]); \r\n        }\r\n     \r\n    },[idTrucksselected]);\r\n\r\n    const OnChange = e => \r\n    {\r\n        SetEditarCamion({\r\n            ...EditarCamion,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n   \r\n    const onSubmit = e =>\r\n    { \r\n        e.preventDefault();\r\n        if(EditarCamion.nombre.trim() === '' ||EditarCamion.marca.trim() ===  '' || \r\n        EditarCamion.modelo.trim() === '' || EditarCamion.matricula.trim() === '' )\r\n        {\r\n            Alert(t('camposobligatorios') ,t('nosehainsertado'),\"error\");\r\n        }\r\n        else\r\n        { \r\n            dispatch(EditTrucks(EditarCamion,{t}));                                        \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Modal isOpen={showEditTruckpopup} fade={false} style={modalStyle}>\r\n        <ModalHeader ><a class=\"mover\" onClick={() => ClosePopup()}>x</a></ModalHeader>\r\n        <ModalBody>\r\n        <div >\r\n            <div >\r\n            <br></br>\r\n                   <h1>{t('EditarCamion')}</h1>\r\n                    <form onSubmit={onSubmit}>                   \r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">{t('Nombre')}</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            class=\"form-control\"\r\n                            placeholder={t('TuNombre')}\r\n                            value={EditarCamion == undefined ? \"\" : EditarCamion.nombre}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"marca\">{t('Marca')}</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"marca\"\r\n                            name=\"marca\"\r\n                            class=\"form-control\"\r\n                            placeholder={t('IntroducirMarca')}\r\n                            value={EditarCamion == undefined ? '' : EditarCamion.marca}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"modelo\">{t('Modelo')}</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"modelo\"\r\n                            name=\"modelo\"\r\n                            class=\"form-control\"\r\n                            placeholder={t('IntroducirModelo')}\r\n                            value={EditarCamion == undefined ? '' : EditarCamion.modelo}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"matricula\">{t('Matricula')}</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"matricula\"\r\n                            name=\"matricula\"\r\n                            class=\"form-control\"\r\n                            placeholder={t('IntroducirMatricula')}\r\n                            value={EditarCamion == undefined ? '' : EditarCamion.matricula}\r\n                            onChange={OnChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-success btn-block btn-lg\" value={t('EditarCamion')}/>\r\n                    </div>\r\n                </form>                                       \r\n            </div>\r\n        </div>\r\n        </ModalBody>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default EditTruck;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\CreateTrucks.js",["184"],"import react,  { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {CreateTruck} from '../../actions/TruckActions';\r\nimport {useDispatch} from 'react-redux';\r\nimport Alert from '../Alert/Alert';\r\nimport { useTranslation } from 'react-i18next';\r\nconst CreateTrucks = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { t} = useTranslation();\r\n    const [NuevoCamion,CrearCamion] = useState({\r\n        nombre:'',\r\n        marca:'',\r\n        modelo: '',\r\n        matricula: '',\r\n    });\r\n    \r\n    const {nombre,marca,modelo,matricula} = NuevoCamion;\r\n\r\n    //cada cambio seteamos el objeto usuario \r\n    const OnChange = e => \r\n    {\r\n        CrearCamion({\r\n            ...NuevoCamion,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n   \r\n    const onSubmit = e =>\r\n    {\r\n        e.preventDefault();\r\n        if(nombre.trim() === '' ||marca.trim() ===  '' || \r\n        modelo.trim() === '' || matricula.trim() === '' )\r\n        {\r\n            Alert(t('camposobligatorios'),t('nosehainsertado'),\"error\");\r\n        }\r\n        else\r\n        {      \r\n            dispatch(CreateTruck(NuevoCamion,history,{t}));                                             \r\n        }\r\n    }\r\n    return (\r\n        <div className =\"form-usuarioCrear ImageBackgroundLogin\">      \r\n            <div className=\"contenedor-form sombra-dark\">                \r\n                <h1>{t('CrearCamion')}</h1>\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"nombre\">{t('Nombre')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        class=\"form-control\"\r\n                        placeholder={t('TuNombre')}\r\n                        value={nombre}\r\n                        onChange={OnChange}\r\n                    />\r\n                </div>\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"marca\">{t('Marca')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"marca\"\r\n                        name=\"marca\"\r\n                        class=\"form-control\"\r\n                        placeholder={t('IntroducirMarca')}\r\n                        value={marca}\r\n                        onChange={OnChange}\r\n                    />\r\n                </div>\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"modelo\">{t('Modelo')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"modelo\"\r\n                        name=\"modelo\"\r\n                        class=\"form-control\"\r\n                        placeholder={t('IntroducirModelo')}\r\n                        value={modelo}\r\n                        onChange={OnChange}\r\n                    />\r\n                </div>\r\n                <div className=\"campo-form\">\r\n                    <label htmlFor=\"matricula\">{t('Matricula')}</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"matricula\"\r\n                        name=\"matricula\"\r\n                        class=\"form-control\"\r\n                        placeholder={t('IntroducirMatricula')}\r\n                        value={matricula}\r\n                        onChange={OnChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <input type=\"submit\" className=\"btn btn-success btn-block btn-lg\" value={t('CrearCamion')}/>\r\n                </div>\r\n                </form>                   \r\n                <Link to={'/TrucksPage'} className=\"enlace-cuenta\">{t('Iralitadodecamiones')}</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTrucks;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\UsersReducer.js",["185"],"import {\r\n    LOGIN_USER\r\n} from '../Types';\r\n\r\n//cada reducer tiene su state \r\nconst initialState = {\r\n     dataUserLoginldpa:{},\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    debugger;\r\n    switch(action.type)\r\n    {\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                dataUserLoginldpa: action.payload\r\n            }\r\n         default:\r\n             return state;\r\n    }\r\n}",["186","187"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\DeleteTruck.js",["188","189","190","191","192"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\actions\\UsersActions.js",["193","194"],"import {\r\n    LOGIN_USER,\r\n} from '../Types';\r\n\r\nimport UserServices from '../Services/UserService';\r\nimport Alert from '../Components/Alert/Alert';\r\n\r\nexport function LoginUserLdap(UsersData,history,{t}){\r\n   return async (dispatch) =>{      \r\n        const p = Promise.resolve( new UserServices().loginldap(UsersData));\r\n        p.then(response => {\r\n            debugger;\r\n            if (response.value.messageLogin == 'OK000')\r\n            {\r\n                dispatch(loginldap(response.value));\r\n                history.push(\"/MenuInicial\"); \r\n            }\r\n            else{   \r\n                 if(response.value.messageLogin == 'KO050')\r\n                 {\r\n                    Alert(t('credencialesnoCorrectas'),t('contacteadministrador'),'error');\r\n                                \r\n                } \r\n                 else{\r\n\r\n                 }     Alert(t('errordeconexion'),t('contacteadministrador'),'error');          \r\n            }    \r\n        });                     \r\n   }\r\n}\r\n\r\nconst loginldap = (newState) =>({\r\n    type:LOGIN_USER,\r\n    payload:newState\r\n});\r\n\r\n\r\n\r\n","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Global.js",["195"],"export default {\r\n  BASE_URL_PRODUCTION : 'http://localhost:8080/',\r\n  BASE_URL_LOCAL : 'https://localhost:44321/api/',\r\n  BASE_URL: 'http://localhost:7203/api/',\r\n};\r\n","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reducers\\index.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\auth\\Login.js",["196","197"],"import { useState,useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {LoginUserLdap} from '../../actions/UsersActions';\r\nimport Alert from '../Alert/Alert';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Login = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {t,i18n} = useTranslation();\r\n    function OnLanguageChanged(e) {\r\n        i18n.changeLanguage(e.target.value)\r\n    }\r\n    \r\n    const [Usuario,GuardarUsuario] = useState({\r\n        emailUser: '',\r\n        password: ''\r\n    });\r\n \r\n    const {emailUser,password} = Usuario;\r\n    const OnChange = e => \r\n    {\r\n        GuardarUsuario({\r\n            ...Usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        i18n.changeLanguage(document.getElementById(\"selectedLenguage\").value)\r\n    },[]);\r\n     \r\n    const onSubmit = e =>\r\n    {\r\n        e.preventDefault();\r\n        debugger;\r\n        if(emailUser === '' || password ===  '' )\r\n        {\r\n            Alert(t(\"camposobligatorios\"),t(\"credencialesIncorrectas\"),\"error\");\r\n        }\r\n        else\r\n        {       \r\n            dispatch(LoginUserLdap(Usuario,history,{t}));                              \r\n        }\r\n    }\r\n    return (\r\n        <div className =\"form-usuario ImageBackgroundLogin\">\r\n            <div className=\"contenedor-form sombra-dark\">       \r\n                    <h1>{t('iniciarsesion')}</h1>\r\n                    <form\r\n                      onSubmit={onSubmit}>\r\n                        <div className=\"campo-form\">\r\n                            <label htmlFor=\"emailUser\">{t('Email')}</label>\r\n                            <input\r\n                                type=\"string\"\r\n                                id=\"emailUser\"\r\n                                name=\"emailUser\"\r\n                                class=\"form-control\"\r\n                                placeholder={t('TuEmail')}\r\n                                value={emailUser}\r\n                                onChange={OnChange}\r\n                             />\r\n                        </div>\r\n                        \r\n                        <div className=\"campo-form\">\r\n                            <label htmlFor=\"password\">{t('Password')}</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                class=\"form-control\"\r\n                                placeholder={t('TuPassword')}\r\n                                value={password}\r\n                                onChange={OnChange}\r\n                             />\r\n                        </div>\r\n                        <div className=\"campo-form form-select\">\r\n                            <select id=\"selectedLenguage\" onChange={OnLanguageChanged}>                           \r\n                                    <option value='fa'>فارسی</option>  \r\n                                    <option value='es' selected>Español</option>                                  \r\n                                    <option value='en'>English</option>\r\n                                    <option value='fr'>French</option>                                  \r\n                            </select>\r\n                         </div>\r\n\r\n                        <div className=\"campo-form\">\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" value={t('iniciarsesion')}/>\r\n                        </div>\r\n                    </form>\r\n                    <Link hidden={true} to={'/Nueva-Cuenta-Usuario'} className=\"enlace-cuenta\">\r\n                     Crear nueva cuenta usuario\r\n                    </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Services\\UserService.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\i18n.js",[],["198","199"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\TrucksPage.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Types\\index.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Trucks\\FiltersTruck.js",["200","201","202","203","204"],"\r\nimport React,{useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {UpdateListTrucks} from '../../actions/TruckActions';\r\nconst FiltersTruck= () => {\r\n    const { t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const ListTrucksInit = useSelector(state => state.TrucksReducers.ListTrucks2);\r\n    const [FiltersTruck,setFiltersTruck] = useState({\r\n        matriculafiltro:'',\r\n        modelofiltro:''\r\n    });\r\n\r\n    const OnChange = e => \r\n    {\r\n        setFiltersTruck({\r\n            ...FiltersTruck,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    useEffect(() => \r\n    {  \r\n         let ListTrucksfilter =ListTrucksInit;\r\n         if (FiltersTruck.matriculafiltro !='')\r\n         {\r\n            ListTrucksfilter = ListTrucksfilter.filter(truck => truck.matricula == FiltersTruck.matriculafiltro)\r\n         }\r\n         if (FiltersTruck.modelofiltro !='')\r\n         {\r\n            ListTrucksfilter = ListTrucksfilter.filter(truck => truck.modelo == FiltersTruck.modelofiltro)\r\n         }\r\n         dispatch(UpdateListTrucks(ListTrucksfilter));    \r\n    },[FiltersTruck]);\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sx-12 col-sm-3 mb-4\">\r\n                    <Link to={'/CreateTrucks'} className=\"btn btn-primary bt-lg mb-2 \">{t('CrearCamion')}</Link>    \r\n                </div>\r\n                    <div class=\"col-sx-12 col-sm-3 mb-3 d-flex align-items-start p-0\">\r\n                        <div class=\"col-12\">\r\n                            <label class=\"d-inline\">{t('Matricula')}</label>\r\n                            <input \r\n                            type=\"text\" \r\n                            name=\"matriculafiltro\"\r\n                            class=\"form-control\" \r\n                            id=\"matricula\" \r\n                            placeholder={t('IntroducirMatricula')}\r\n                            value={FiltersTruck.matriculafiltro}\r\n                            onChange={OnChange}\r\n                        />\r\n                        </div>\t\r\n                        <div class=\"col-12\">\r\n                            <label>{t('Modelo')}</label>\r\n                            <input type=\"text\"\r\n                            class=\"form-control\" \r\n                            name=\"modelofiltro\"\r\n                            id=\"modelo\" \r\n                            placeholder={t('IntroducirModelo')}\r\n                            value={FiltersTruck.modelofiltro}\r\n                            onChange={OnChange}                  \r\n                        />\r\n                        </div>\t\t\t\t\t\t\t\t\t\t\r\n                    </div>    \r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default FiltersTruck;\r\n","C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\reportWebVitals.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Calendar\\Calendar.jsx",["205"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Calendar\\CalendarPage.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\history\\history.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Cars\\Cars.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\Alert\\Alert.js",[],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\Pagination\\index.js",["206"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\DataTable.js",["207","208","209","210"],"C:\\proyectos\\AtlasCopo\\AtlasCopco\\AtlasCopcoFrontend\\src\\Components\\DataTable\\Header\\index.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":1,"column":24,"nodeType":"217","messageId":"218","endLine":1,"endColumn":33},{"ruleId":"215","severity":1,"message":"219","line":1,"column":34,"nodeType":"217","messageId":"218","endLine":1,"endColumn":42},{"ruleId":"215","severity":1,"message":"220","line":7,"column":13,"nodeType":"217","messageId":"218","endLine":7,"endColumn":14},{"ruleId":"215","severity":1,"message":"221","line":5,"column":9,"nodeType":"217","messageId":"218","endLine":5,"endColumn":27},{"ruleId":"215","severity":1,"message":"222","line":5,"column":42,"nodeType":"217","messageId":"218","endLine":5,"endColumn":62},{"ruleId":"215","severity":1,"message":"223","line":5,"column":63,"nodeType":"217","messageId":"218","endLine":5,"endColumn":81},{"ruleId":"224","severity":1,"message":"225","line":16,"column":7,"nodeType":"226","endLine":16,"endColumn":9,"suggestions":"227"},{"ruleId":"211","replacedBy":"228"},{"ruleId":"213","replacedBy":"229"},{"ruleId":"211","replacedBy":"230"},{"ruleId":"213","replacedBy":"231"},{"ruleId":"215","severity":1,"message":"232","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"215","severity":1,"message":"233","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":14},{"ruleId":"215","severity":1,"message":"234","line":25,"column":10,"nodeType":"217","messageId":"218","endLine":25,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":49,"column":30,"nodeType":"237","messageId":"238","endLine":49,"endColumn":32},{"ruleId":"235","severity":1,"message":"236","line":49,"column":47,"nodeType":"237","messageId":"238","endLine":49,"endColumn":49},{"ruleId":"235","severity":1,"message":"239","line":56,"column":35,"nodeType":"237","messageId":"238","endLine":56,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":82,"column":33,"nodeType":"237","messageId":"238","endLine":82,"endColumn":35},{"ruleId":"215","severity":1,"message":"240","line":6,"column":5,"nodeType":"217","messageId":"218","endLine":6,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":24,"column":1,"nodeType":"243","endLine":91,"endColumn":2},{"ruleId":"211","replacedBy":"244"},{"ruleId":"213","replacedBy":"245"},{"ruleId":"215","severity":1,"message":"246","line":4,"column":9,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"247","line":4,"column":44,"nodeType":"217","messageId":"218","endLine":4,"endColumn":55},{"ruleId":"215","severity":1,"message":"248","line":4,"column":56,"nodeType":"217","messageId":"218","endLine":4,"endColumn":65},{"ruleId":"215","severity":1,"message":"249","line":4,"column":66,"nodeType":"217","messageId":"218","endLine":4,"endColumn":71},{"ruleId":"215","severity":1,"message":"250","line":4,"column":72,"nodeType":"217","messageId":"218","endLine":4,"endColumn":77},{"ruleId":"235","severity":1,"message":"236","line":37,"column":28,"nodeType":"237","messageId":"238","endLine":37,"endColumn":30},{"ruleId":"235","severity":1,"message":"239","line":39,"column":65,"nodeType":"237","messageId":"238","endLine":39,"endColumn":67},{"ruleId":"224","severity":1,"message":"251","line":42,"column":7,"nodeType":"226","endLine":42,"endColumn":25,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":68,"column":23,"nodeType":"255","endLine":68,"endColumn":69},{"ruleId":"235","severity":1,"message":"239","line":83,"column":49,"nodeType":"237","messageId":"238","endLine":83,"endColumn":51},{"ruleId":"235","severity":1,"message":"239","line":95,"column":49,"nodeType":"237","messageId":"238","endLine":95,"endColumn":51},{"ruleId":"235","severity":1,"message":"239","line":107,"column":49,"nodeType":"237","messageId":"238","endLine":107,"endColumn":51},{"ruleId":"235","severity":1,"message":"239","line":119,"column":49,"nodeType":"237","messageId":"238","endLine":119,"endColumn":51},{"ruleId":"215","severity":1,"message":"232","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":10,"column":1,"nodeType":"243","endLine":22,"endColumn":2},{"ruleId":"211","replacedBy":"256"},{"ruleId":"213","replacedBy":"257"},{"ruleId":"215","severity":1,"message":"246","line":3,"column":9,"nodeType":"217","messageId":"218","endLine":3,"endColumn":15},{"ruleId":"215","severity":1,"message":"248","line":3,"column":56,"nodeType":"217","messageId":"218","endLine":3,"endColumn":65},{"ruleId":"215","severity":1,"message":"249","line":3,"column":66,"nodeType":"217","messageId":"218","endLine":3,"endColumn":71},{"ruleId":"215","severity":1,"message":"250","line":3,"column":72,"nodeType":"217","messageId":"218","endLine":3,"endColumn":77},{"ruleId":"253","severity":1,"message":"254","line":27,"column":27,"nodeType":"255","endLine":27,"endColumn":79},{"ruleId":"235","severity":1,"message":"239","line":13,"column":45,"nodeType":"237","messageId":"238","endLine":13,"endColumn":47},{"ruleId":"235","severity":1,"message":"239","line":19,"column":49,"nodeType":"237","messageId":"238","endLine":19,"endColumn":51},{"ruleId":"241","severity":1,"message":"258","line":1,"column":1,"nodeType":"243","endLine":5,"endColumn":3},{"ruleId":"215","severity":1,"message":"259","line":3,"column":21,"nodeType":"217","messageId":"218","endLine":3,"endColumn":32},{"ruleId":"224","severity":1,"message":"260","line":31,"column":7,"nodeType":"226","endLine":31,"endColumn":9,"suggestions":"261"},{"ruleId":"211","replacedBy":"262"},{"ruleId":"213","replacedBy":"263"},{"ruleId":"235","severity":1,"message":"236","line":27,"column":43,"nodeType":"237","messageId":"238","endLine":27,"endColumn":45},{"ruleId":"235","severity":1,"message":"239","line":29,"column":81,"nodeType":"237","messageId":"238","endLine":29,"endColumn":83},{"ruleId":"235","severity":1,"message":"236","line":31,"column":40,"nodeType":"237","messageId":"238","endLine":31,"endColumn":42},{"ruleId":"235","severity":1,"message":"239","line":33,"column":78,"nodeType":"237","messageId":"238","endLine":33,"endColumn":80},{"ruleId":"224","severity":1,"message":"264","line":36,"column":7,"nodeType":"226","endLine":36,"endColumn":21,"suggestions":"265"},{"ruleId":"215","severity":1,"message":"266","line":40,"column":9,"nodeType":"217","messageId":"218","endLine":40,"endColumn":12},{"ruleId":"224","severity":1,"message":"267","line":33,"column":8,"nodeType":"226","endLine":33,"endColumn":33,"suggestions":"268"},{"ruleId":"215","severity":1,"message":"269","line":15,"column":12,"nodeType":"217","messageId":"218","endLine":15,"endColumn":20},{"ruleId":"215","severity":1,"message":"270","line":15,"column":22,"nodeType":"217","messageId":"218","endLine":15,"endColumn":33},{"ruleId":"215","severity":1,"message":"271","line":31,"column":20,"nodeType":"217","messageId":"218","endLine":31,"endColumn":29},{"ruleId":"224","severity":1,"message":"225","line":46,"column":6,"nodeType":"226","endLine":46,"endColumn":8,"suggestions":"272"},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'t' is assigned a value but never used.","'ShowEditPopupTruck' is defined but never used.","'ShowDeletePopupTruck' is defined but never used.","'SetIdTruckselected' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 't'. Either include them or remove the dependency array.","ArrayExpression",["275"],["273"],["274"],["273"],["274"],"'react' is defined but never used.","'sha256' is defined but never used.","'Contraseñasha256Hash' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'ERROR_EDIT_TRUCK' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["273"],["274"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","React Hook useEffect has a missing dependency: 'listTrucks'. Either include it or remove the dependency array. If 'SetEditarCamion' needs the current value of 'listTrucks', you can also switch to useReducer instead of useState and read 'listTrucks' in the reducer.",["276"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["273"],["274"],"Assign object to a variable before exporting as module default","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n'. Either include it or remove the dependency array.",["277"],["273"],["274"],"React Hook useEffect has missing dependencies: 'ListTrucksInit' and 'dispatch'. Either include them or remove the dependency array.",["278"],"'axe' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'onPageChange'. Either include it or remove the dependency array. If 'onPageChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'setSearch' is assigned a value but never used.",["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"281","fix":"291"},"Update the dependencies array to be: [dispatch, t]",{"range":"292","text":"293"},"Update the dependencies array to be: [idTrucksselected, listTrucks]",{"range":"294","text":"295"},"Update the dependencies array to be: [i18n]",{"range":"296","text":"297"},"Update the dependencies array to be: [FiltersTruck, ListTrucksInit, dispatch]",{"range":"298","text":"299"},"Update the dependencies array to be: [totalPages, currentPage, onPageChange]",{"range":"300","text":"301"},{"range":"302","text":"293"},[639,641],"[dispatch, t]",[1280,1298],"[idTrucksselected, listTrucks]",[906,908],"[i18n]",[1235,1249],"[FiltersTruck, ListTrucksInit, dispatch]",[908,933],"[totalPages, currentPage, onPageChange]",[1809,1811]]